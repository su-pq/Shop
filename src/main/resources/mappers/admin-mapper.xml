<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<!-- 해당 파일에 모든 쿼리문을 작성 -->
<mapper namespace="adminMapper">
	<resultMap type="com.study.shop.admin.vo.MenuVO" id="menu">
		<id 	column="MENU_CODE" 	property="menuCode"/>
		<result column="MENU_NAME" 	property="menuName"/>
		<result column="MENU_URL" 	property="menuUrl"/>
		<collection property="adminSubMenuList" resultMap="subMenu"></collection>
	</resultMap>
	<resultMap type="com.study.shop.admin.vo.SubMenuVO" id="subMenu">
		<id column="SUB_MENU_CODE" 		property="subMenuCode"/>
		<result column="SUB_MENU_NAME" 	property="subMenuName"/>
		<result column="SUB_MENU_URL" 	property="subMenuUrl"/>
		<result column="MENU_CODE" 		property="menuCode"/>
	</resultMap>
	
	<resultMap type="com.study.shop.admin.vo.StatisticsVO" id="statistics">
		<result column="MONTH_01" property="month01"/>
		<result column="MONTH_02" property="month02"/>
		<result column="MONTH_03" property="month03"/>
		<result column="MONTH_04" property="month04"/>
		<result column="MONTH_05" property="month05"/>
		<result column="MONTH_06" property="month06"/>
		<result column="MONTH_07" property="month07"/>
		<result column="MONTH_08" property="month08"/>
		<result column="MONTH_09" property="month09"/>
		<result column="MONTH_10" property="month10"/>
		<result column="MONTH_11" property="month11"/>
		<result column="MONTH_12" property="month12"/>
	</resultMap>
	<resultMap type="com.study.shop.admin.vo.StatisticsByCategoryVO" id="statisticsByCategory">
		<result column="CATE_NAME" 		property="cateName"/>
		<result column="SALE_CNT" 	property="saleCnt"/>
	</resultMap>
	<resultMap type="com.study.shop.admin.vo.StatusInfoVO" id="statusInfo">
		<id column="STATUS_CODE" 		property="statusCode"/>
		<result column="STATUS_NAME" 	property="statusName"/>
	</resultMap>
	<resultMap type="com.study.shop.admin.vo.OrderStatusVO" id="orderStatus">
		<id column="ORDER_NUM" 		property="orderNum"/>
		<result column="STATUS_CODE" 	property="statusCode"/>
		<result column="BUY_CODE" 	property="buyCode"/>
		<result column="MEM_ID" 	property="memId"/>
		<result column="UPDATE_DATE" 	property="updateDate"/>
		
		<result column="ROW_NUMBER" 	property="rowNumber"/>
		
		<association property="statusInfoVO" resultMap="statusInfo"></association>
		<association property="buyVO" resultMap="buyMapper.buy"></association>
		<association property="memberVO" resultMap="memberMapper.member"></association>
	</resultMap>
	
	<!-- 카테고리 관리 페이지에서 카테고리 목록 조회 -->
	<!-- mapper끼리는 서로 resultMap을 공유 가능하다. -->
	<select id="getCateListForAdmin" resultMap="itemMapper.category">
		SELECT CATE_CODE
			, CATE_NAME
			, ORDER_NUM
			, IS_USE
		FROM ITEM_CATEGORY
		ORDER BY ORDER_NUM
	</select>
	
	<select id="getAdminMenuList" resultMap="menu">
		SELECT MENU_CODE
			, MENU_NAME
			, MENU_URL
		FROM ADMIN_MENU
	</select>
	<select id="getAdminSubMenuList" resultMap="subMenu">
		SELECT SUB_MENU_CODE
			, SUB_MENU_NAME
			, SUB_MENU_URL
			, MENU_CODE
		FROM ADMIN_SUB_MENU
		WHERE MENU_CODE = #{menuCode}
		ORDER BY SUB_MENU_CODE
	</select>
	
	
	<select id="getRegCate" resultMap="itemMapper.category">
		SELECT CATE_CODE
		    , CATE_NAME
		    , ORDER_NUM
		    , IS_USE
		FROM ITEM_CATEGORY
		WHERE CATE_CODE = (SELECT 'CATE_'||LPAD(NVL(MAX(TO_NUMBER(SUBSTR(CATE_CODE, 6))), 0), 3, '0') FROM ITEM_CATEGORY)
	</select>
	
	<insert id="regCate">
		INSERT INTO ITEM_CATEGORY (
		    CATE_CODE
		    , CATE_NAME
		    , ORDER_NUM
		) VALUES(
		    (SELECT 'CATE_'||LPAD(NVL(MAX(TO_NUMBER(SUBSTR(CATE_CODE, 6))), 0)+1, 3, '0') FROM ITEM_CATEGORY)
		    , #{cateName}
		    , (SELECT NVL(MAX(ORDER_NUM), 0)+1 FROM ITEM_CATEGORY)
		)
	</insert>
	
	<!-- 카테고리명 중복체크 -->
	<select id="checkCateName" resultType="int">
		SELECT COUNT(CATE_CODE) 
		FROM ITEM_CATEGORY 
		WHERE CATE_NAME=#{cateName}
	</select>
	
	<!-- isUse값 수정 -->
	<update id="updateIsUse">
		UPDATE ITEM_CATEGORY
		SET IS_USE = DECODE(IS_USE, 'Y', 'N', 'N', 'Y')
		WHERE CATE_CODE = #{cateCode}
	</update>
	
	<delete id="deleteCate">
		DELETE ITEM_CATEGORY
		WHERE CATE_CODE = #{cateCode}
	</delete>
	
	<insert id="regItem">
		INSERT INTO SHOP_ITEM (
		    ITEM_CODE
		    , CATE_CODE
		    , ITEM_NAME
		    , ITEM_PRICE
		    , ITEM_STOCK
		    , ITEM_INTRO
		    , ITEM_STATUS
		) VALUES(
		    #{itemCode}
		    , #{cateCode}
		    , #{itemName}
		    , #{itemPrice}
		    , #{itemStock}
		    , #{itemIntro}
		    , #{itemStatus}
		)
	</insert>
	
	<select id="getNextItemCode" resultType="String">
		SELECT 'ITEM_'||LPAD(NVL(MAX(TO_NUMBER(SUBSTR(ITEM_CODE, 6))), 0)+1, 3, '0') 
		FROM SHOP_ITEM
	</select>
	
	<select id="getItemListForItemManage" resultMap="itemMapper.item">
		SELECT 
			ITEM_CODE
			, CATE_NAME
			, ITEM_NAME
			, DECODE(ITEM_STATUS, 1, '판매중', 2, '준비중', 3, '매진') ITEM_STATUS_STR
			, ITEM_STOCK
		FROM ITEM_CATEGORY CATE, SHOP_ITEM ITEM
		WHERE CATE.CATE_CODE = ITEM.CATE_CODE
		<if test='searchItemVO != null and !searchItemVO.searchItemName.equals("")'>
			AND ITEM_NAME LIKE '%'||#{searchItemVO.searchItemName}||'%'
		</if>
		<if test="searchItemVO != null">
			AND ITEM.CATE_CODE IN (
			<foreach collection="searchItemVO.searchCateCode" item="cateCode" separator=", ">
				#{cateCode}
			</foreach>)
		</if>
		<if test="searchItemVO != null and searchItemVO.searchItemStatus != 0">
			AND ITEM_STATUS IN (#{searchItemVO.searchItemStatus})
		</if>
		<if test='searchItemVO != null and !searchItemVO.searchMinItemStock.equals("")'>
			AND ITEM_STOCK &gt;= TO_NUMBER(#{searchItemVO.searchMinItemStock}) 		
		</if>
		<if test='searchItemVO != null and !searchItemVO.searchMinItemStock.equals("")'>
			AND ITEM_STOCK &lt;=  TO_NUMBER(#{searchItemVO.searchMaxItemStock})
		</if>
		ORDER BY CATE.CATE_CODE, ITEM_CODE
	</select>
	<!-- #{minItemStock}  #{maxItemStock} -->
	<insert id="regImgs">
		INSERT INTO ITEM_IMG (
		    IMG_CODE
		    , ORIGIN_FILE_NAME
		    , ATTACHED_FILE_NAME
		    , IS_MAIN
		    , ITEM_CODE
		)
		<foreach collection="imgList" item="img" separator="UNION ALL" index="i">
			SELECT (SELECT 'IMG_'||LPAD(NVL(MAX(TO_NUMBER(SUBSTR(IMG_CODE, 5))), 0)+ 1 + #{i}, 3, '0')FROM ITEM_IMG)
			    , #{img.originFileName}
			    , #{img.attachedFileName}
			    , #{img.isMain}
			    , #{img.itemCode}
			FROM DUAL
		</foreach>
	
	</insert>
	<select id="getItemForItemManage" resultMap="itemMapper.item">
		SELECT ITEM.ITEM_CODE
				, CATE_CODE
				, ITEM_NAME
				, ITEM_PRICE
				, ITEM_INTRO
				, ITEM_STATUS
				, ITEM_STOCK
		        , IMG_CODE
		        , ORIGIN_FILE_NAME
		        , ATTACHED_FILE_NAME
		        , IS_MAIN
		FROM  SHOP_ITEM ITEM, ITEM_IMG IMG
		WHERE ITEM.ITEM_CODE = IMG.ITEM_CODE
		AND ITEM.ITEM_CODE = #{itemCode}
	</select>
	<!-- 상품정보 수정 -->
	<update id="updateItem">
		UPDATE SHOP_ITEM
		SET 
			CATE_CODE = #{cateCode}
			, ITEM_NAME = #{itemName}
			, ITEM_PRICE = #{itemPrice}
			, ITEM_INTRO = #{itemIntro}
			, ITEM_STATUS = #{itemStatus}
			, ITEM_STOCK = #{itemStock}
		WHERE ITEM_CODE = #{itemCode}
	</update>
	<select id="getSaleStatusPerMonth" resultMap="statistics">
		SELECT
		    NVL(SUM(DECODE(TO_CHAR(BUY_DATE, 'MM'), '01', 1, 0)), 0) AS MONTH_01
		    ,  NVL(SUM(DECODE(TO_CHAR(BUY_DATE, 'MM'), '02', 1, 0)), 0) AS MONTH_02
		    ,  NVL(SUM(DECODE(TO_CHAR(BUY_DATE, 'MM'), '03', 1, 0)), 0) AS MONTH_03
		    ,  NVL(SUM(DECODE(TO_CHAR(BUY_DATE, 'MM'), '04', 1, 0)), 0) AS MONTH_04
		    ,  NVL(SUM(DECODE(TO_CHAR(BUY_DATE, 'MM'), '05', 1, 0)), 0) AS MONTH_05
		    ,  NVL(SUM(DECODE(TO_CHAR(BUY_DATE, 'MM'), '06', 1, 0)), 0) AS MONTH_06
		    ,  NVL(SUM(DECODE(TO_CHAR(BUY_DATE, 'MM'), '07', 1, 0)), 0) AS MONTH_07
		    ,  NVL(SUM(DECODE(TO_CHAR(BUY_DATE, 'MM'), '08', 1, 0)), 0) AS MONTH_08
		    ,  NVL(SUM(DECODE(TO_CHAR(BUY_DATE, 'MM'), '09', 1, 0)), 0) AS MONTH_09
		    ,  NVL(SUM(DECODE(TO_CHAR(BUY_DATE, 'MM'), '10', 1, 0)), 0) AS MONTH_10
		    ,  NVL(SUM(DECODE(TO_CHAR(BUY_DATE, 'MM'), '11', 1, 0)), 0) AS MONTH_11
		    ,  NVL(SUM(DECODE(TO_CHAR(BUY_DATE, 'MM'), '12', 1, 0)), 0) AS MONTH_12
		FROM SHOP_BUY
		WHERE TO_CHAR(BUY_DATE, 'YYYY') = #{year}
		UNION ALL
		SELECT 
		     NVL(SUM(DECODE(TO_CHAR(BUY_DATE, 'MM'), '01', BUY_PRICE, 0)), 0) AS MONTH_01
		    ,  NVL(SUM(DECODE(TO_CHAR(BUY_DATE, 'MM'), '02', BUY_PRICE, 0)), 0) AS MONTH_02
		    ,  NVL(SUM(DECODE(TO_CHAR(BUY_DATE, 'MM'), '03', BUY_PRICE, 0)), 0) AS MONTH_03
		    ,  NVL(SUM(DECODE(TO_CHAR(BUY_DATE, 'MM'), '04', BUY_PRICE, 0)), 0) AS MONTH_04
		    ,  NVL(SUM(DECODE(TO_CHAR(BUY_DATE, 'MM'), '05', BUY_PRICE, 0)), 0) AS MONTH_05
		    ,  NVL(SUM(DECODE(TO_CHAR(BUY_DATE, 'MM'), '06', BUY_PRICE, 0)), 0) AS MONTH_06
		    ,  NVL(SUM(DECODE(TO_CHAR(BUY_DATE, 'MM'), '07', BUY_PRICE, 0)), 0) AS MONTH_07
		    ,  NVL(SUM(DECODE(TO_CHAR(BUY_DATE, 'MM'), '08', BUY_PRICE, 0)), 0) AS MONTH_08
		    ,  NVL(SUM(DECODE(TO_CHAR(BUY_DATE, 'MM'), '09', BUY_PRICE, 0)), 0) AS MONTH_09
		    ,  NVL(SUM(DECODE(TO_CHAR(BUY_DATE, 'MM'), '10', BUY_PRICE, 0)), 0) AS MONTH_10
		    ,  NVL(SUM(DECODE(TO_CHAR(BUY_DATE, 'MM'), '11', BUY_PRICE, 0)), 0) AS MONTH_11
		    ,  NVL(SUM(DECODE(TO_CHAR(BUY_DATE, 'MM'), '12', BUY_PRICE, 0)), 0) AS MONTH_12
		FROM SHOP_BUY
		WHERE TO_CHAR(BUY_DATE, 'YYYY') = #{year}
	</select>
	<!-- 2번째 방법 -->
	<select id="getSaleStatusPerMonth2" resultType="HashMap">
		SELECT
		    NVL(SUM(DECODE(TO_CHAR(BUY_DATE, 'MM'), '01', 1, 0)), 0) AS MONTH_01
		    ,  NVL(SUM(DECODE(TO_CHAR(BUY_DATE, 'MM'), '02', 1, 0)), 0) AS MONTH_02
		    ,  NVL(SUM(DECODE(TO_CHAR(BUY_DATE, 'MM'), '03', 1, 0)), 0) AS MONTH_03
		    ,  NVL(SUM(DECODE(TO_CHAR(BUY_DATE, 'MM'), '04', 1, 0)), 0) AS MONTH_04
		    ,  NVL(SUM(DECODE(TO_CHAR(BUY_DATE, 'MM'), '05', 1, 0)), 0) AS MONTH_05
		    ,  NVL(SUM(DECODE(TO_CHAR(BUY_DATE, 'MM'), '06', 1, 0)), 0) AS MONTH_06
		    ,  NVL(SUM(DECODE(TO_CHAR(BUY_DATE, 'MM'), '07', 1, 0)), 0) AS MONTH_07
		    ,  NVL(SUM(DECODE(TO_CHAR(BUY_DATE, 'MM'), '08', 1, 0)), 0) AS MONTH_08
		    ,  NVL(SUM(DECODE(TO_CHAR(BUY_DATE, 'MM'), '09', 1, 0)), 0) AS MONTH_09
		    ,  NVL(SUM(DECODE(TO_CHAR(BUY_DATE, 'MM'), '10', 1, 0)), 0) AS MONTH_10
		    ,  NVL(SUM(DECODE(TO_CHAR(BUY_DATE, 'MM'), '11', 1, 0)), 0) AS MONTH_11
		    ,  NVL(SUM(DECODE(TO_CHAR(BUY_DATE, 'MM'), '12', 1, 0)), 0) AS MONTH_12
		FROM SHOP_BUY
		WHERE TO_CHAR(BUY_DATE, 'YYYY') = #{year}
		UNION ALL
		SELECT 
		     NVL(SUM(DECODE(TO_CHAR(BUY_DATE, 'MM'), '01', BUY_PRICE, 0)), 0) AS MONTH_01
		    ,  NVL(SUM(DECODE(TO_CHAR(BUY_DATE, 'MM'), '02', BUY_PRICE, 0)), 0) AS MONTH_02
		    ,  NVL(SUM(DECODE(TO_CHAR(BUY_DATE, 'MM'), '03', BUY_PRICE, 0)), 0) AS MONTH_03
		    ,  NVL(SUM(DECODE(TO_CHAR(BUY_DATE, 'MM'), '04', BUY_PRICE, 0)), 0) AS MONTH_04
		    ,  NVL(SUM(DECODE(TO_CHAR(BUY_DATE, 'MM'), '05', BUY_PRICE, 0)), 0) AS MONTH_05
		    ,  NVL(SUM(DECODE(TO_CHAR(BUY_DATE, 'MM'), '06', BUY_PRICE, 0)), 0) AS MONTH_06
		    ,  NVL(SUM(DECODE(TO_CHAR(BUY_DATE, 'MM'), '07', BUY_PRICE, 0)), 0) AS MONTH_07
		    ,  NVL(SUM(DECODE(TO_CHAR(BUY_DATE, 'MM'), '08', BUY_PRICE, 0)), 0) AS MONTH_08
		    ,  NVL(SUM(DECODE(TO_CHAR(BUY_DATE, 'MM'), '09', BUY_PRICE, 0)), 0) AS MONTH_09
		    ,  NVL(SUM(DECODE(TO_CHAR(BUY_DATE, 'MM'), '10', BUY_PRICE, 0)), 0) AS MONTH_10
		    ,  NVL(SUM(DECODE(TO_CHAR(BUY_DATE, 'MM'), '11', BUY_PRICE, 0)), 0) AS MONTH_11
		    ,  NVL(SUM(DECODE(TO_CHAR(BUY_DATE, 'MM'), '12', BUY_PRICE, 0)), 0) AS MONTH_12
		FROM SHOP_BUY
		WHERE TO_CHAR(BUY_DATE, 'YYYY') = #{year}
	</select>
	<!-- (쌤)카테고리별 판매건수 조회 -->
	<select id="getSaleStatusByCategory2" resultType="HashMap">
		WITH IMSI_TABLE AS
		(
		    SELECT 
		        (SELECT CATE_CODE FROM SHOP_ITEM WHERE ITEM_CODE = BUY_DETAIL.ITEM_CODE) CATE_CODE
		        , BUY_CNT
		    FROM BUY_DETAIL
		)
		SELECT CATE_CODE
		    , (SELECT CATE_NAME FROM ITEM_CATEGORY WHERE CATE_CODE = IMSI_TABLE.CATE_CODE) CATE_NAME
		    , SUM(BUY_CNT) SUM_BUY_CNT
		FROM IMSI_TABLE
		GROUP BY CATE_CODE
	</select>
	<!-- (내 코드)카테고리별 판매건수 조회 -->
	<select id="getSaleStatusByCategory" resultMap="statisticsByCategory">
		SELECT CATE_NAME, TO_CHAR(SUM(BUY_CNT)) SALE_CNT
		FROM BUY_DETAIL BD, SHOP_ITEM ITEM, ITEM_CATEGORY CATE
		WHERE BD.ITEM_CODE = ITEM.ITEM_CODE
		AND ITEM.CATE_CODE = CATE.CATE_CODE
		GROUP BY CATE.CATE_CODE, CATE_NAME
	</select>
	
	
	<!--  -->
	<select id="getStatusInfoList" resultMap="statusInfo">
		SELECT STATUS_CODE
			, STATUS_NAME
		FROM STATUS_INFO
		ORDER BY STATUS_CODE
	</select>
	
	<!-- 주문관리페이지 전체 조회 -->
	<select id="getOrderListByStatus" resultMap="orderStatus">
		SELECT 
		    ORDER_STATUS.BUY_CODE
		    , ORDER_STATUS.ORDER_NUM
		    , SHOP_MEMBER.MEM_ID
		    , REPLACE(TRIM(MEM_TELL), ' ', '') MEM_TELL
		    , SHOP_BUY.BUY_PRICE
		    , UPDATE_DATE
		    , ORDER_STATUS.STATUS_CODE
		    , STATUS_INFO.STATUS_NAME
		FROM ORDER_STATUS, SHOP_MEMBER, SHOP_BUY, STATUS_INFO
		WHERE SHOP_BUY.MEM_ID = SHOP_MEMBER.MEM_ID
		AND SHOP_BUY.BUY_CODE = ORDER_STATUS.BUY_CODE
		AND ORDER_STATUS.STATUS_CODE = STATUS_INFO.STATUS_CODE
		AND ORDER_STATUS.STATUS_CODE = #{statusCode}
		ORDER BY UPDATE_DATE DESC
	</select>
	<!-- 페이징 처리 select문 -->
	<select id="getOrderListPage" resultMap="orderStatus">
		
		        SELECT 
		            ORDER_STATUS.BUY_CODE
		            , SHOP_MEMBER.MEM_ID
		            , REPLACE(TRIM(MEM_TELL), ' ', '') MEM_TELL
		            , SHOP_BUY.BUY_PRICE
		            , TO_CHAR(SHOP_BUY.BUY_DATE, 'YYYY-MM-DD') BUY_DATE 
    				, TO_CHAR(SHOP_BUY.BUY_DATE, 'YYYY-MM-DD HH24:MI:SS')BUY_DATE_ORDER
		            , ORDER_STATUS.STATUS_CODE
		            , STATUS_INFO.STATUS_NAME
		        FROM ORDER_STATUS, SHOP_MEMBER, SHOP_BUY, STATUS_INFO
		        WHERE SHOP_BUY.MEM_ID = SHOP_MEMBER.MEM_ID
		        AND SHOP_BUY.BUY_CODE = ORDER_STATUS.BUY_CODE
		        AND ORDER_STATUS.STATUS_CODE = STATUS_INFO.STATUS_CODE
		        <if test='statusCodeList != null'>
				AND ORDER_STATUS.STATUS_CODE IN
					<foreach collection="statusCodeList" item="staCode" open="(" close=")" separator=",">			
						#{staCode}
					</foreach>
				</if>
				<if test='searchFromDate != null and !searchFromDate.equals("")'>
				AND TO_CHAR(BUY_DATE, 'YYYY-MM-DD') &gt;= #{searchFromDate}
				</if>
				<if test='searchToDate != null and !searchToDate.equals("")'>
				AND TO_CHAR(BUY_DATE, 'YYYY-MM-DD') &lt;= #{searchToDate}
				</if>
				
				<if test='searchValue != null and !searchValue.equals("")'>
				AND UPPER(${searchKeyword}) LIKE '%'||UPPER(#{searchValue})||'%'
				</if>
				
				ORDER BY ${orderBy} DESC
				OFFSET #{offsetCnt} ROWS FETCH FIRST #{displayCnt} ROWS ONLY
	</select>
	<select id="getBuyCntForOrderManage" resultType="int">
		SELECT 
		    COUNT(ORDER_NUM)
		FROM ORDER_STATUS, SHOP_MEMBER, SHOP_BUY
		WHERE SHOP_BUY.MEM_ID = SHOP_MEMBER.MEM_ID
		AND SHOP_BUY.BUY_CODE = ORDER_STATUS.BUY_CODE
		<if test='statusCodeList != null'>
		AND ORDER_STATUS.STATUS_CODE IN
			<foreach collection="statusCodeList" item="staCode" open="(" close=")" separator=",">			
				#{staCode}
			</foreach>
		</if>
		<if test='searchFromDate != null and !searchFromDate.equals("")'>
		AND TO_CHAR(BUY_DATE, 'YYYY-MM-DD') &gt;= #{searchFromDate}
		</if>
		<if test='searchToDate != null and !searchToDate.equals("")'>
		AND TO_CHAR(BUY_DATE, 'YYYY-MM-DD') &lt;= #{searchToDate}
		</if>
		<if test='searchValue != null and !searchValue.equals("")'>
			AND UPPER(${searchKeyword}) LIKE '%'||UPPER(#{searchValue})||'%'
		</if>
		
	</select>
	<update id="changeStatus">
		UPDATE ORDER_STATUS
		SET STATUS_CODE = #{statusCode}, UPDATE_DATE = SYSDATE, MEM_ID = #{memId}
		WHERE ORDER_NUM IN 
		<foreach collection="orderNumList" item="orderNum" open="(" close=")" separator=",">
			#{orderNum}
		</foreach>
	</update>
	
	<select id="getBuyDetailList" resultMap="buyMapper.buyDetail">
		SELECT ATTACHED_FILE_NAME
		    , ITEM_NAME
		    , ITEM_PRICE
		    , BUY_CNT
		    , DETAIL_BUY_PRICE
		FROM ITEM_IMG IMG, SHOP_ITEM ITEM, BUY_DETAIL BD
		WHERE IMG.ITEM_CODE = ITEM.ITEM_CODE
		AND ITEM.ITEM_CODE = BD.ITEM_CODE
		AND BUY_CODE = #{buyCode}
		AND IS_MAIN = 'Y'
	</select>
	
</mapper>


























